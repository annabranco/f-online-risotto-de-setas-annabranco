{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.min.js","sourcesContent":["'use strict';\n\nconst EXERCISE_URL = 'https://raw.githubusercontent.com/Adalab/recipes-data/master/rissoto-setas.json';\nlet RECIPE;\n\n/**\n * Como yo uso arrow functions, para entender la lógica de ese código recomiendo\n * que sea lido de bajo para arriba.\n */\n\n// ======== Deficición de las funcionalidades secundarias (derivadas de eventos)\n\n/* [ 9 ] */ const updateTotalCosts = () => {\n  const allPriceFields = document.querySelectorAll( '.recipe-main__value' );\n  const shippingCost = RECIPE[ 'shipping-cost' ];\n  let   subtotal       = 0;\n  let   total          = 0;\n\n  allPriceFields.forEach( priceField => total += Number( priceField.innerHTML.slice( 0, priceField.innerHTML.length - 1 ) ));\n  document.getElementById( 'subtotal' ).innerHTML = total.toFixed( 2 ) + RECIPE.currency;\n  document.getElementById( 'total' ).innerHTML = ( total + shippingCost ).toFixed( 2 ) + RECIPE.currency;\n  document.getElementById( 'totalButton' ).innerHTML = ( total + shippingCost ).toFixed( 2 ) + RECIPE.currency;\n};\n\n/* [ 8 ] */ const updateTotalQuantities = () => {\n  const allQuantityFields = document.querySelectorAll( '.recipe-main__quantityField' );\n  let   total             = 0;\n\n  allQuantityFields.forEach( quantityField => total += Number( quantityField.value ));\n  document.getElementById( 'quantity' ).innerHTML = total;\n};\n\n/* [ 7 ] */ const determineCosts = ( ingredientId, quantity ) => {\n  for ( const _ingredient of RECIPE.ingredients ) {\n    let costPerUnity;\n\n    if ( _ingredient.id === ingredientId ) {\n      costPerUnity = _ingredient.price;\n      return ( costPerUnity * quantity ).toFixed( 2 ) + RECIPE.currency;\n    }\n  }\n};\n\n// -----------------------------------------------------------------------------\n\n// ======== Deficición de las funcionalidades directas (eventos) ===============\n\n/* [ 6 ] */ const handleCheckboxClick = clickEvent => {\n  const thisIngredient = clickEvent.currentTarget.parentElement;\n\n  if ( clickEvent.currentTarget.checked ) {\n    thisIngredient.querySelector( '.recipe-main__quantityField' ).value = 1;\n    thisIngredient.querySelector( '.recipe-main__value' ).innerHTML = determineCosts( thisIngredient.id, 1 ); // ver [ 7 ]\n  } else {\n    thisIngredient.querySelector( '.recipe-main__quantityField' ).value = 0;\n    thisIngredient.querySelector( '.recipe-main__value' ).innerHTML = determineCosts( thisIngredient.id, 0 ); // ver [ 7 ]\n  }\n  updateTotalQuantities(); // ver [ 8 ]\n  updateTotalCosts();      // ver [ 9 ]\n};\n\n/* [ 5 ] */ const handleQuantityInputChange = changeEvent => {\n  const thisIngredient = changeEvent.currentTarget.parentElement;\n  const thisCheckBox   = thisIngredient.querySelector( '.recipe-main__checkbox' );\n  const quantity       = changeEvent.currentTarget.value;\n\n  thisIngredient.querySelector( '.recipe-main__value' ).innerHTML = determineCosts( thisIngredient.id, quantity );\n\n  console.log( quantity, thisCheckBox);\n\n  if ( thisCheckBox.checked === false ) {\n    thisCheckBox.checked = true;\n  } else if ( Number( quantity ) === 0 ) {\n    thisCheckBox.checked = false;\n  }\n\n  updateTotalQuantities(); // ver [ 8 ]\n  updateTotalCosts();      // ver [ 9 ]\n};\n\n// -----------------------------------------------------------------------------\n\n// ======== Añade funcionalidades (eventos) a la página ========================\n\n/* [ 4 ] */ const addEventListeners = () => {\n  const CHECKBOXES      = document.querySelectorAll( '.recipe-main__checkbox' );\n  const QUANTITY_INPUTS = document.querySelectorAll( '.recipe-main__quantityField' );\n\n  CHECKBOXES.forEach( checkbox => {\n    checkbox.addEventListener( 'click', handleCheckboxClick );\n  });\n\n  QUANTITY_INPUTS.forEach( input => {\n    input.addEventListener( 'input', handleQuantityInputChange );\n  });\n};\n\n// -----------------------------------------------------------------------------\n\n// ====== Funciones estructurales, montan la estructura básica de la página ====\n\n/* [ 3 ] */ const catchIngredients = () => {\n  const INGREDIENTS__LIST = document.getElementById( 'ingredientsList' );\n\n  INGREDIENTS__LIST.querySelector( '.recipe-main__articleDetail-title' ).innerHTML = RECIPE.ingredients[ 0 ].product;\n  INGREDIENTS__LIST.querySelector( '.recipe-main__articleDetail-brand' ).innerHTML = RECIPE.ingredients[ 0 ].brand;\n  INGREDIENTS__LIST.querySelector( '.recipe-main__articleDetail-weigth' ).innerHTML = RECIPE.ingredients[ 0 ].quantity;\n  INGREDIENTS__LIST.querySelector( '.recipe-main__quantityField' ).value = RECIPE.ingredients[ 0 ].items;\n  INGREDIENTS__LIST.querySelector( '.recipe-main__value' ).innerHTML = Number( RECIPE.ingredients[ 0 ].price ).toFixed( 2 ) + RECIPE.currency;\n\n  RECIPE.ingredients.forEach(( ingredient, index ) => {\n    ingredient.id = `ingredient-${ index + 1 }`;\n\n    if ( index > 0 ) {\n      const newItem = document.querySelector( '.recipe-main__ingredient' ).cloneNode( true );\n\n      INGREDIENTS__LIST.appendChild( newItem );\n      newItem.id = `ingredient-${ index + 1 }`;\n      newItem.querySelector( '.recipe-main__articleDetail-title' ).innerHTML = ingredient.product;\n      newItem.querySelector( '.recipe-main__articleDetail-brand' ).innerHTML = ingredient.brand || '';\n      newItem.querySelector( '.recipe-main__articleDetail-weigth' ).innerHTML = ingredient.quantity;\n      newItem.querySelector( '.recipe-main__quantityField' ).value = ingredient.items;\n      newItem.querySelector( '.recipe-main__value' ).innerHTML = Number( ingredient.price ).toFixed( 2 ) + RECIPE.currency;\n    }\n  });\n  console.log( RECIPE );\n  addEventListeners(); // ver [ 4 ]\n};\n\n/* [ 2 ] */ const catchRecipeNameAndDetails = () => {\n  document.getElementById( 'title' ).innerHTML = RECIPE.name;\n  document.getElementById( 'shipping' ).innerHTML = RECIPE[ 'shipping-cost' ].toFixed( 2 ) + RECIPE.currency;\n};\n\n/* [ 1 ] */ const catchData = () => {\n  catchRecipeNameAndDetails(); // ver [ 2 ]\n  catchIngredients();          // ver [ 3 ]\n  updateTotalQuantities();     // ver [ 8 ]\n  updateTotalCosts();          // ver [ 9 ]\n};\n\n// -----------------------------------------------------------------------------\n\n// ================== Inicía la ejecución del código ===========================\n\n/* [ 0 ] */ const INITIATE = () => {\n  fetch( EXERCISE_URL )\n    .then( response => response.json())\n    .then( responseJSON => {\n      RECIPE = responseJSON.recipe;\n      catchData(); // ver [ 1 ]\n    })\n    .catch( error => {\n      console.log( 'Failed when trying to fetch data from servers.' );\n      console.log( 'Reason: ', error );\n      console.log( 'Serving data from local.' );\n      fetch( './scripts/database.json' )\n        .then( response => response.json())\n        .then( responseJSON => {\n          RECIPE = responseJSON.recipe;\n          catchData(); // ver [ 1 ]\n        });\n    });\n};\n\n// -----------------------------------------------------------------------------\n\nINITIATE(); // ver [ 0 ]\n"]}